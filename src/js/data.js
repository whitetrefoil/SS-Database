// Generated by CoffeeScript 1.6.2
(function() {
  'use strict';
  var App, Item, ItemCollection, ItemElem, ItemElemCollection, ItemRange, ItemRangeCollection, ItemSeries, ItemSeriesCollection, ItemType, ItemTypeCollection, NULL_REPLACE, Quest, QuestCollection, _ref, _ref1, _ref10, _ref11, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  NULL_REPLACE = '-';

  App = window.App || {};

  ItemElem = (function(_super) {
    __extends(ItemElem, _super);

    function ItemElem() {
      _ref = ItemElem.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return ItemElem;

  })(Backbone.RelationalModel);

  ItemType = (function(_super) {
    __extends(ItemType, _super);

    function ItemType() {
      _ref1 = ItemType.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    return ItemType;

  })(Backbone.RelationalModel);

  ItemRange = (function(_super) {
    __extends(ItemRange, _super);

    function ItemRange() {
      _ref2 = ItemRange.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    return ItemRange;

  })(Backbone.RelationalModel);

  ItemSeries = (function(_super) {
    __extends(ItemSeries, _super);

    function ItemSeries() {
      _ref3 = ItemSeries.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    ItemSeries.prototype.relations = [
      {
        type: Backbone.HasOne,
        key: 'type',
        relatedModel: ItemType,
        reverseRelation: {
          relatedCollection: ItemSeriesCollection,
          key: 'itemSerieses'
        }
      }, {
        type: Backbone.HasOne,
        key: 'elem',
        relatedModel: ItemElem,
        reverseRelation: {
          relatedCollection: ItemSeriesCollection,
          key: 'itemSerieses'
        }
      }, {
        type: Backbone.HasOne,
        key: 'range',
        relatedModel: ItemRange,
        reverseRelation: {
          relatedCollection: ItemSeriesCollection,
          key: 'itemSerieses'
        }
      }
    ];

    return ItemSeries;

  })(Backbone.RelationalModel);

  Item = (function(_super) {
    __extends(Item, _super);

    function Item() {
      _ref4 = Item.__super__.constructor.apply(this, arguments);
      return _ref4;
    }

    Item.prototype.relations = [
      {
        type: Backbone.HasOne,
        key: 'itemSeriesId',
        relatedModel: ItemSeries,
        reverseRelation: {
          relatedCollection: ItemCollection,
          key: 'items'
        }
      }
    ];

    return Item;

  })(Backbone.RelationalModel);

  ItemElemCollection = (function(_super) {
    __extends(ItemElemCollection, _super);

    function ItemElemCollection() {
      _ref5 = ItemElemCollection.__super__.constructor.apply(this, arguments);
      return _ref5;
    }

    ItemElemCollection.prototype.model = ItemElem;

    ItemElemCollection.prototype.url = 'data/item_elem.json';

    ItemElemCollection.prototype.initialize = function() {
      return this.fetch();
    };

    return ItemElemCollection;

  })(Backbone.Collection);

  ItemTypeCollection = (function(_super) {
    __extends(ItemTypeCollection, _super);

    function ItemTypeCollection() {
      _ref6 = ItemTypeCollection.__super__.constructor.apply(this, arguments);
      return _ref6;
    }

    ItemTypeCollection.prototype.model = ItemType;

    ItemTypeCollection.prototype.url = 'data/item_type.json';

    ItemTypeCollection.prototype.initialize = function() {
      return this.fetch();
    };

    return ItemTypeCollection;

  })(Backbone.Collection);

  ItemRangeCollection = (function(_super) {
    __extends(ItemRangeCollection, _super);

    function ItemRangeCollection() {
      _ref7 = ItemRangeCollection.__super__.constructor.apply(this, arguments);
      return _ref7;
    }

    ItemRangeCollection.prototype.model = ItemRange;

    ItemRangeCollection.prototype.url = 'data/item_range.json';

    ItemRangeCollection.prototype.initialize = function() {
      return this.fetch();
    };

    return ItemRangeCollection;

  })(Backbone.Collection);

  ItemCollection = (function(_super) {
    __extends(ItemCollection, _super);

    function ItemCollection() {
      _ref8 = ItemCollection.__super__.constructor.apply(this, arguments);
      return _ref8;
    }

    ItemCollection.prototype.model = Item;

    ItemCollection.prototype.url = 'data/item.json';

    ItemCollection.prototype.initialize = function() {
      return this.fetch();
    };

    return ItemCollection;

  })(Backbone.Collection);

  ItemSeriesCollection = (function(_super) {
    __extends(ItemSeriesCollection, _super);

    function ItemSeriesCollection() {
      _ref9 = ItemSeriesCollection.__super__.constructor.apply(this, arguments);
      return _ref9;
    }

    ItemSeriesCollection.prototype.model = ItemSeries;

    ItemSeriesCollection.prototype.url = 'data/item_series.json';

    ItemSeriesCollection.prototype.initialize = function() {
      return this.fetch();
    };

    return ItemSeriesCollection;

  })(Backbone.Collection);

  App.itemElems = new ItemElemCollection();

  App.itemTypes = new ItemTypeCollection();

  App.itemRanges = new ItemRangeCollection();

  App.itemSerieses = new ItemSeriesCollection();

  App.items = new ItemCollection();

  Quest = (function(_super) {
    __extends(Quest, _super);

    function Quest() {
      _ref10 = Quest.__super__.constructor.apply(this, arguments);
      return _ref10;
    }

    return Quest;

  })(Backbone.RelationalModel);

  QuestCollection = (function(_super) {
    __extends(QuestCollection, _super);

    function QuestCollection() {
      _ref11 = QuestCollection.__super__.constructor.apply(this, arguments);
      return _ref11;
    }

    QuestCollection.prototype.model = Quest;

    QuestCollection.prototype.url = 'data/quest.json';

    QuestCollection.prototype.initialize = function() {
      return this.fetch();
    };

    return QuestCollection;

  })(Backbone.Collection);

  App.quests = new QuestCollection;

  window.App = App;

}).call(this);
